name: Deploy Website

on:
  push:
    tags:
      - 'releases/*'

concurrency:
  group: deploy-website
  cancel-in-progress: false

env:
  HTML_STATIC_PATH: '/var/www/ofer_to'
  OFER_TO_DOMAIN: 'ofer.to'
  SERVER_RSA_PATH: 'rsa_ssh'
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  IMAGE_NAME: 'danofer'
  CONFIGURATION_PATH: 'configuration.json'

jobs:
  nginx:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/create_server_rsa_key
        with:
          PRIVATE_RSA_KEY_PATH: ${{ env.SERVER_RSA_PATH }}
          PRIVATE_RSA_KEY_CONTENT: ${{ secrets.PROD_STATIC_SERVER_PRIVATE_KEY }}

      - name: Deploy TLS Certificate and Private Key
        run: |
          echo "${TLS_CERTIFICATE}" > ${TLS_CERTIFICATE_FILENAME}
          echo "${TLS_PRIVATE_KEY}" > ${TLS_PRIVATE_KEY_FILENAME}

          scp \
            -r \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            -i ${SERVER_RSA_PATH} \
            "${TLS_CERTIFICATE_FILENAME}" "${TLS_PRIVATE_KEY_FILENAME}" "root@${OFER_TO_DOMAIN}:${TLS_ENCRYPTION_PATH}"
        env:
          TLS_PRIVATE_KEY: ${{ secrets.PROD_TLS_CERTIFICATE_PRIVATE_KEY }}
          TLS_CERTIFICATE: ${{ secrets.PROD_TLS_CERTIFICATE }}
          TLS_PRIVATE_KEY_FILENAME: './ofer_to.private.pem'
          TLS_CERTIFICATE_FILENAME: './star_ofer_to.crt'
          TLS_ENCRYPTION_PATH: '/etc/letsencrypt/live/ofer.to'

      - name: Deploy NGINX Confs
        working-directory: ./nginx_confs
        run: |
          echo "${DH_PARAM_CONTENT}" > "${DH_PARAM_FILENAME}"

          scp \
            -r \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            -i "../${SERVER_RSA_PATH}" \
            ./nginx.conf ./${DH_PARAM_FILENAME} ./sites-available ./nginxconfig.io "root@${OFER_TO_DOMAIN}:/etc/nginx"
        env:
          DH_PARAM_CONTENT: ${{ secrets.DH_PARAM }}
          DH_PARAM_FILENAME: 'dhparam.pem'

      - name: Enable sites
        run: |
          # # Disable previous sites
          set +e
          ssh \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            -i ${SERVER_RSA_PATH} \
            "root@${OFER_TO_DOMAIN}" rm "$(find /etc/nginx/sites-enabled -type l)"
          set -e

          # # Disable previous sites
          ssh \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            -i ${SERVER_RSA_PATH} \
            "root@${OFER_TO_DOMAIN}" find /etc/nginx/sites-enabled -type l

          # Enable the static and api sites
          for file in 'static'; do
            ssh \
              -o StrictHostKeyChecking=no \
              -o UserKnownHostsFile=/dev/null \
              -i ${SERVER_RSA_PATH} \
              "root@${OFER_TO_DOMAIN}" ln -s "/etc/nginx/sites-available/${file}.conf" /etc/nginx/sites-enabled/${file}.conf
          done

      - name: Restart NGINX
        run: |
          ssh \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            -i ${SERVER_RSA_PATH} \
            "root@${OFER_TO_DOMAIN}" systemctl restart nginx
