name: Deploy API Website

on:
  push:
    'releases/*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: docker-practice/actions-setup-docker@master

      - name: Build Docker Image
        working-directory: ./api
        run: bash ../.github/scripts/api/build_docker_image.sh
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          IMAGE_NAME: ${{ secrets.IMAGE_NAME }}

      - name: Push Docker Image
        working-directory: ./api
        run: bash ../.github/scripts/api/push_docker_image.sh
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          IMAGE_NAME: ${{ secrets.IMAGE_NAME }}

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/releases/')

    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1

      - name: Build Local ofer.to Image
        run: bash ../.github/scripts/api/build_danofer_image.sh
        working-directory: ./api
        env:
          STATIC_SERVER_PRIVATE_KEY: ${{ secrets.PROD_STATIC_SERVER_PRIVATE_KEY }}
          SERVER_RSA: "./server_rsa"
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
          SEND_GRID_API_KEY: ${{ secrets.PROD_SEND_GRID_API_KEY }}
          IP_ADDRESS: ${{ secrets.OFER_TO_IP_ADDRESS }}

      - name: Run Local ofer.to Image
        run: bash ../.github/scripts/api/run_danofer_image.sh
        working-directory: ./api
        env:
          STATIC_SERVER_PRIVATE_KEY: ${{ secrets.PROD_STATIC_SERVER_PRIVATE_KEY }}
          SERVER_RSA: "./server_rsa"
          IP_ADDRESS: ${{ secrets.OFER_TO_IP_ADDRESS }}
